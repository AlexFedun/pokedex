{"version":3,"sources":["components/Types.js","components/Pokeinfo.js","components/Pokemon.js","components/Pokelist.js","components/App.js","index.js"],"names":["Types","color","this","props","name","Badge","variant","style","background","className","Component","Pokeinfo","capitalize","s","charAt","toUpperCase","slice","item","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Container","Row","Col","xs","md","Image","src","sprites","front_default","thumbnail","imageRendering","width","Table","responsive","height","weight","base_experience","types","map","index","type","key","abilities","ability","ProgressBar","animated","now","stats","base_stat","label","max","Footer","Button","onClick","onHide","Pokemon","state","error","isLoaded","items","modalShow","fetch","url","then","res","json","result","setState","message","Card","Img","show","console","log","Pokelist","offset","limit","fetchData","previousPage","nestPage","pageLimit","Navbar","bg","fixed","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","ButtonGroup","e","disabled","previous","next","Form","inline","FormControl","placeholder","CardColumns","results","Spinner","animation","role","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.090dfcb0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\n\r\nclass Types extends Component {\r\n\r\n    render() {\r\n        let color;\r\n        switch (this.props.name) {\r\n            case \"normal\":\r\n                color = \"#A8A878\";\r\n                break;\r\n            case \"fighting\":\r\n                color = \"#C03028\";\r\n                break;\r\n            case \"flying\":\r\n                color = \"#A890F0\";\r\n                break;\r\n            case \"poison\":\r\n                color = \"#A040A0\";\r\n                break;\r\n            case \"ground\":\r\n                color = \"#E0C068\";\r\n                break;\r\n            case \"rock\":\r\n                color = \"#B8A038\";\r\n                break;\r\n            case \"bug\":\r\n                color = \"#A8B820\";\r\n                break;\r\n            case \"ghost\":\r\n                color = \"#705898\";\r\n                break;\r\n            case \"steel\":\r\n                color = \"#B8B8D0\";\r\n                break;\r\n            case \"fire\":\r\n                color = \"#F08030\";\r\n                break;\r\n            case \"water\":\r\n                color = \"#6890F0\";\r\n                break;\r\n            case \"grass\":\r\n                color = \"#78C850\";\r\n                break;\r\n            case \"electric\":\r\n                color = \"#F8D030\";\r\n                break;\r\n            case \"psychic\":\r\n                color = \"#F85888\";\r\n                break;\r\n            case \"ice\":\r\n                color = \"#98D8D8\";\r\n                break;\r\n            case \"dragon\":\r\n                color = \"#7038F8\";\r\n                break;\r\n            case \"dark\":\r\n                color = \"#705848\";\r\n                break;\r\n            case \"fairy\":\r\n                color = \"#F0B6BC\";\r\n                break;\r\n            case \"shadow\":\r\n                color = \"#705898\";\r\n                break;\r\n            case \"unknown\":\r\n                color = \"#6AA596\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return <Badge variant=\"primary\" style={{background: color}} className=\"mr-1\">{this.props.name}</Badge>;\r\n    };\r\n}\r\nexport default Types","import React, {Component} from 'react'\r\nimport { Modal, Button, Container, Row, Col, Image, Table, ProgressBar} from 'react-bootstrap';\r\nimport Types from './Types';\r\n\r\nclass Pokeinfo extends Component {\r\n\r\n    capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    \r\n    render() {\r\n        const { item } = this.props;\r\n        return (\r\n            <Modal {...this.props} size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                {this.capitalize(item.name) + \" #\" + item.id}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={5}>\r\n                        <Image src={item.sprites.front_default} thumbnail style={{imageRendering: \"pixelated\", width: \"100%\"}}/>\r\n                    </Col>\r\n                    <Col xs={12} md={7}>\r\n                        <Table responsive>\r\n                            <tr>\r\n                                <td>Height</td>\r\n                                <td>{item.height}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Weight</td>\r\n                                <td>{item.weight}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Base experience</td>\r\n                                <td>{item.base_experience}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Types</td>\r\n                                <td>\r\n                                {\r\n                                    item.types.map( (item, index) => (\r\n                                    <Types name={item.type.name} key={index}/>\r\n                                    ))\r\n                                }\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Abilities</td>\r\n                                <td>\r\n                                {\r\n                                    item.abilities.map( (item, index) => (\r\n                                        <div key={index}>{this.capitalize(item.ability.name)}</div>\r\n                                    ))\r\n                                }\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>                    \r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Table responsive>\r\n                            <tr>\r\n                                <td style={{width: \"150px\"}}>HP</td>\r\n                                <td>\r\n                                    <ProgressBar animated now={item.stats[5].base_stat}\r\n                                    variant=\"info\" label={item.stats[5].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Attack</td>\r\n                                <td >\r\n                                    <ProgressBar animated now={item.stats[4].base_stat}\r\n                                    variant=\"info\" label={item.stats[4].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Defense</td>\r\n                                <td >\r\n                                    <ProgressBar animated now={item.stats[3].base_stat}\r\n                                    variant=\"info\" label={item.stats[3].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Special Attack</td>\r\n                                <td >\r\n                                    <ProgressBar animated now={item.stats[2].base_stat}\r\n                                    variant=\"info\" label={item.stats[2].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Special Defense</td>\r\n                                <td >\r\n                                    <ProgressBar animated now={item.stats[1].base_stat}\r\n                                    variant=\"info\" label={item.stats[1].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Speed</td>\r\n                                <td>\r\n                                    <ProgressBar animated now={item.stats[0].base_stat}\r\n                                    variant=\"info\" label={item.stats[0].base_stat} max=\"200\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Pokeinfo","import React, {Component} from 'react'\r\nimport { Card } from 'react-bootstrap';\r\nimport Types from './Types';\r\nimport Pokeinfo from './Pokeinfo';\r\n\r\nclass Pokemon extends Component {\r\n  state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      modalShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n      fetch(this.props.url)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n    capitalize = (s) => {\r\n      if (typeof s !== 'string') return ''\r\n      return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        let modalClose = () => this.setState({ modalShow: false }, () => console.log(this.state));\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Card onClick={() => this.setState({modalShow: true})}>\r\n                  <Card.Header>\r\n                    <h5>\r\n                      {this.capitalize(items.name)}\r\n                      <small> #{items.id}</small>\r\n                    </h5>\r\n                  </Card.Header>\r\n                  <Card.Img variant=\"top\" src={items.sprites.front_default} style={{imageRendering: \"pixelated\"}}/>\r\n                  <Card.Footer>\r\n                      {\r\n                        items.types.map( (item, index) => (\r\n                          <Types name={item.type.name} key={index}/>\r\n                        ))\r\n                      }\r\n                  </Card.Footer>\r\n                </Card>\r\n              <Pokeinfo show={this.state.modalShow} onHide={modalClose} item={items}/>\r\n              </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Pokemon","import React, {Component} from 'react'\r\nimport { CardColumns, Col, ButtonGroup, Button, Spinner, Navbar, Nav, Form, FormControl } from 'react-bootstrap';\r\nimport Pokemon from './Pokemon'\r\n\r\nclass Pokelist extends Component {\r\n    state = {\r\n        offset: 0,\r\n        limit: 10,\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n      }\r\n\r\n    fetchData = () => {\r\n      fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=\" + this.state.offset + \"&limit=\" + this.state.limit)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    previousPage = () => {\r\n      this.setState({ offset: this.state.offset - this.state.limit }, this.fetchData);\r\n    }\r\n\r\n    nestPage = () => {\r\n      this.setState({ offset: this.state.offset + this.state.limit }, this.fetchData);  \r\n    }\r\n\r\n    pageLimit = (limit) => {\r\n      this.setState(\r\n        {\r\n          offset: 0,\r\n          limit: limit\r\n        },\r\n          this.fetchData\r\n        );  \r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            );\r\n        } else {\r\n            return (\r\n                <Col>\r\n                  <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#\">Pokedex</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                      <Nav className=\"mr-auto\">\r\n                        <ButtonGroup className=\"ml-3\">\r\n                          <Button variant=\"outline-primary\" onClick={(e) => this.pageLimit(10, e)}>10</Button>\r\n                          <Button variant=\"outline-primary\" onClick={(e) => this.pageLimit(20, e)}>20</Button>\r\n                          <Button variant=\"outline-primary\" onClick={(e) => this.pageLimit(50, e)}>50</Button>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup className=\"ml-3\">\r\n                        <Button variant=\"primary\" disabled> Page: {this.state.offset / this.state.limit + 1} </Button>\r\n                        {items.previous != null? <Button variant=\"primary\" onClick={this.previousPage}>Previous page</Button>:\"\"}\r\n                        {items.next != null? <Button variant=\"primary\" onClick={this.nestPage}>Next page</Button>:\"\"}\r\n                      </ButtonGroup>\r\n                      </Nav>\r\n                      <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-info\">Search</Button>\r\n                      </Form>\r\n                    </Navbar.Collapse>\r\n                  </Navbar>\r\n                  <CardColumns className=\"mt-5\">\r\n                  {items.results.map(item => (\r\n                      <Pokemon url={item.url} key={item.name}/>\r\n                  ))}\r\n                  </CardColumns>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n }\r\nexport default Pokelist","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Pokelist from './Pokelist'\n\nfunction App() {\n  return (\n    <Container>\n      <Row>\n        <Pokelist />\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './components/App'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css'\n\nrender(<App/>, document.getElementById('root'))"],"sourceRoot":""}